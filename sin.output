Terminals unused in grammar

   OPPOSITE
   FUNC
   STRING
   FUNCNAME


Gramática

    0 $accept: root $end

    1 root: declaration
    2     | function

    3 declaration: INT VARIABLE SEMICOLON

    4 $@1: /* vacío */

    5 $@2: /* vacío */

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    7 $@3: /* vacío */

    8 params: INT VARIABLE $@3 COMMA params
    9       | INT VARIABLE

   10 codeSet: declaration codeSet
   11        | instruction codeSet
   12        | controlStructure codeSet
   13        | declaration
   14        | instruction
   15        | controlStructure

   16 instruction: assignation
   17            | aritmeticOperation SEMICOLON
   18            | return SEMICOLON
   19            | print SEMICOLON
   20            | BREAK SEMICOLON

   21 assignation: VARIABLE '=' NUMBER SEMICOLON

   22 aritmeticOperation: aritmeticOperation '-' aritmeticOperation
   23                   | aritmeticOperation '+' aritmeticOperation
   24                   | aritmeticOperation '*' aritmeticOperation
   25                   | aritmeticOperation '/' aritmeticOperation
   26                   | OPENINGBRACKET aritmeticOperation CLOSINGBRACKET
   27                   | NUMBER

   28 return: RETURN VARIABLE
   29       | RETURN NUMBER

   30 print: PRINT OPENINGBRACKET printableElement CLOSINGBRACKET

   31 printableElement: VARIABLE
   32                 | QUOTE text QUOTE
   33                 | printableElement '+' printableElement

   34 text: TEXT
   35     | ' '

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

   37 structuresWord: IF
   38               | ELSE
   39               | WHILE

   40 logicalOperation: VARIABLE logicalOperator VARIABLE
   41                 | VARIABLE logicalOperator NUMBER
   42                 | NUMBER logicalOperator NUMBER
   43                 | NUMBER logicalOperator VARIABLE

   44 logicalOperator: EQUAL
   45                | NOTEQUAL
   46                | GREATER
   47                | MINOR
   48                | GREATEREQUAL
   49                | MINOREQUAL


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 35
'*' (42) 24
'+' (43) 23 33
'-' (45) 22
'/' (47) 25
'=' (61) 21
error (256)
NUMBER (258) 21 27 29 41 42 43
INT (259) 3 6 8 9
EQUAL (260) 44
NOTEQUAL (261) 45
GREATER (262) 46
MINOR (263) 47
GREATEREQUAL (264) 48
MINOREQUAL (265) 49
OPPOSITE (266)
IF (267) 37
ELSE (268) 38
WHILE (269) 39
OPENINGCURLYBRACKET (270) 6 36
CLOSINGCURLYBRACKET (271) 6 36
OPENINGBRACKET (272) 6 26 30 36
CLOSINGBRACKET (273) 6 26 30 36
PRINT (274) 30
RETURN (275) 28 29
FUNC (276)
COMMA (277) 8
SEMICOLON (278) 3 17 18 19 20 21
BREAK (279) 20
QUOTE (280) 32
STRING (281)
VARIABLE (282) 3 6 8 9 21 28 31 40 41 43
FUNCNAME (283)
TEXT (284) 34


No terminales con las reglas donde aparecen

$accept (36)
    en la izquierda: 0
root (37)
    en la izquierda: 1 2, en la derecha: 0
declaration (38)
    en la izquierda: 3, en la derecha: 1 10 13
function (39)
    en la izquierda: 6, en la derecha: 2
$@1 (40)
    en la izquierda: 4, en la derecha: 6
$@2 (41)
    en la izquierda: 5, en la derecha: 6
params (42)
    en la izquierda: 8 9, en la derecha: 6 8
$@3 (43)
    en la izquierda: 7, en la derecha: 8
codeSet (44)
    en la izquierda: 10 11 12 13 14 15, en la derecha: 6 10 11 12 36
instruction (45)
    en la izquierda: 16 17 18 19 20, en la derecha: 11 14
assignation (46)
    en la izquierda: 21, en la derecha: 16
aritmeticOperation (47)
    en la izquierda: 22 23 24 25 26 27, en la derecha: 17 22 23 24
    25 26
return (48)
    en la izquierda: 28 29, en la derecha: 18
print (49)
    en la izquierda: 30, en la derecha: 19
printableElement (50)
    en la izquierda: 31 32 33, en la derecha: 30 33
text (51)
    en la izquierda: 34 35, en la derecha: 32
controlStructure (52)
    en la izquierda: 36, en la derecha: 12 15
structuresWord (53)
    en la izquierda: 37 38 39, en la derecha: 36
logicalOperation (54)
    en la izquierda: 40 41 42 43, en la derecha: 36
logicalOperator (55)
    en la izquierda: 44 45 46 47 48 49, en la derecha: 40 41 42 43


estado 0

    0 $accept: . root $end

    INT  desplazar e ir al estado 1

    root         ir al estado 2
    declaration  ir al estado 3
    function     ir al estado 4


estado 1

    3 declaration: INT . VARIABLE SEMICOLON
    6 function: INT . VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    VARIABLE  desplazar e ir al estado 5


estado 2

    0 $accept: root . $end

    $end  desplazar e ir al estado 6


estado 3

    1 root: declaration .

    $default  reduce usando la regla 1 (root)


estado 4

    2 root: function .

    $default  reduce usando la regla 2 (root)


estado 5

    3 declaration: INT VARIABLE . SEMICOLON
    6 function: INT VARIABLE . $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    SEMICOLON  desplazar e ir al estado 7

    $default  reduce usando la regla 4 ($@1)

    $@1  ir al estado 8


estado 6

    0 $accept: root $end .

    $default  aceptar


estado 7

    3 declaration: INT VARIABLE SEMICOLON .

    $default  reduce usando la regla 3 (declaration)


estado 8

    6 function: INT VARIABLE $@1 . OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    OPENINGBRACKET  desplazar e ir al estado 9


estado 9

    6 function: INT VARIABLE $@1 OPENINGBRACKET . $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    $default  reduce usando la regla 5 ($@2)

    $@2  ir al estado 10


estado 10

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 . params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    INT  desplazar e ir al estado 11

    params  ir al estado 12


estado 11

    8 params: INT . VARIABLE $@3 COMMA params
    9       | INT . VARIABLE

    VARIABLE  desplazar e ir al estado 13


estado 12

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params . CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    CLOSINGBRACKET  desplazar e ir al estado 14


estado 13

    8 params: INT VARIABLE . $@3 COMMA params
    9       | INT VARIABLE .

    CLOSINGBRACKET  reduce usando la regla 9 (params)
    $default        reduce usando la regla 7 ($@3)

    $@3  ir al estado 15


estado 14

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET . OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    OPENINGCURLYBRACKET  desplazar e ir al estado 16


estado 15

    8 params: INT VARIABLE $@3 . COMMA params

    COMMA  desplazar e ir al estado 17


estado 16

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET . codeSet CLOSINGCURLYBRACKET

    NUMBER          desplazar e ir al estado 18
    INT             desplazar e ir al estado 19
    IF              desplazar e ir al estado 20
    ELSE            desplazar e ir al estado 21
    WHILE           desplazar e ir al estado 22
    OPENINGBRACKET  desplazar e ir al estado 23
    PRINT           desplazar e ir al estado 24
    RETURN          desplazar e ir al estado 25
    BREAK           desplazar e ir al estado 26
    VARIABLE        desplazar e ir al estado 27

    declaration         ir al estado 28
    codeSet             ir al estado 29
    instruction         ir al estado 30
    assignation         ir al estado 31
    aritmeticOperation  ir al estado 32
    return              ir al estado 33
    print               ir al estado 34
    controlStructure    ir al estado 35
    structuresWord      ir al estado 36


estado 17

    8 params: INT VARIABLE $@3 COMMA . params

    INT  desplazar e ir al estado 11

    params  ir al estado 37


estado 18

   27 aritmeticOperation: NUMBER .

    $default  reduce usando la regla 27 (aritmeticOperation)


estado 19

    3 declaration: INT . VARIABLE SEMICOLON

    VARIABLE  desplazar e ir al estado 38


estado 20

   37 structuresWord: IF .

    $default  reduce usando la regla 37 (structuresWord)


estado 21

   38 structuresWord: ELSE .

    $default  reduce usando la regla 38 (structuresWord)


estado 22

   39 structuresWord: WHILE .

    $default  reduce usando la regla 39 (structuresWord)


estado 23

   26 aritmeticOperation: OPENINGBRACKET . aritmeticOperation CLOSINGBRACKET

    NUMBER          desplazar e ir al estado 18
    OPENINGBRACKET  desplazar e ir al estado 23

    aritmeticOperation  ir al estado 39


estado 24

   30 print: PRINT . OPENINGBRACKET printableElement CLOSINGBRACKET

    OPENINGBRACKET  desplazar e ir al estado 40


estado 25

   28 return: RETURN . VARIABLE
   29       | RETURN . NUMBER

    NUMBER    desplazar e ir al estado 41
    VARIABLE  desplazar e ir al estado 42


estado 26

   20 instruction: BREAK . SEMICOLON

    SEMICOLON  desplazar e ir al estado 43


estado 27

   21 assignation: VARIABLE . '=' NUMBER SEMICOLON

    '='  desplazar e ir al estado 44


estado 28

   10 codeSet: declaration . codeSet
   13        | declaration .

    NUMBER          desplazar e ir al estado 18
    INT             desplazar e ir al estado 19
    IF              desplazar e ir al estado 20
    ELSE            desplazar e ir al estado 21
    WHILE           desplazar e ir al estado 22
    OPENINGBRACKET  desplazar e ir al estado 23
    PRINT           desplazar e ir al estado 24
    RETURN          desplazar e ir al estado 25
    BREAK           desplazar e ir al estado 26
    VARIABLE        desplazar e ir al estado 27

    $default  reduce usando la regla 13 (codeSet)

    declaration         ir al estado 28
    codeSet             ir al estado 45
    instruction         ir al estado 30
    assignation         ir al estado 31
    aritmeticOperation  ir al estado 32
    return              ir al estado 33
    print               ir al estado 34
    controlStructure    ir al estado 35
    structuresWord      ir al estado 36


estado 29

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet . CLOSINGCURLYBRACKET

    CLOSINGCURLYBRACKET  desplazar e ir al estado 46


estado 30

   11 codeSet: instruction . codeSet
   14        | instruction .

    NUMBER          desplazar e ir al estado 18
    INT             desplazar e ir al estado 19
    IF              desplazar e ir al estado 20
    ELSE            desplazar e ir al estado 21
    WHILE           desplazar e ir al estado 22
    OPENINGBRACKET  desplazar e ir al estado 23
    PRINT           desplazar e ir al estado 24
    RETURN          desplazar e ir al estado 25
    BREAK           desplazar e ir al estado 26
    VARIABLE        desplazar e ir al estado 27

    $default  reduce usando la regla 14 (codeSet)

    declaration         ir al estado 28
    codeSet             ir al estado 47
    instruction         ir al estado 30
    assignation         ir al estado 31
    aritmeticOperation  ir al estado 32
    return              ir al estado 33
    print               ir al estado 34
    controlStructure    ir al estado 35
    structuresWord      ir al estado 36


estado 31

   16 instruction: assignation .

    $default  reduce usando la regla 16 (instruction)


estado 32

   17 instruction: aritmeticOperation . SEMICOLON
   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   23                   | aritmeticOperation . '+' aritmeticOperation
   24                   | aritmeticOperation . '*' aritmeticOperation
   25                   | aritmeticOperation . '/' aritmeticOperation

    SEMICOLON  desplazar e ir al estado 48
    '-'        desplazar e ir al estado 49
    '+'        desplazar e ir al estado 50
    '*'        desplazar e ir al estado 51
    '/'        desplazar e ir al estado 52


estado 33

   18 instruction: return . SEMICOLON

    SEMICOLON  desplazar e ir al estado 53


estado 34

   19 instruction: print . SEMICOLON

    SEMICOLON  desplazar e ir al estado 54


estado 35

   12 codeSet: controlStructure . codeSet
   15        | controlStructure .

    NUMBER          desplazar e ir al estado 18
    INT             desplazar e ir al estado 19
    IF              desplazar e ir al estado 20
    ELSE            desplazar e ir al estado 21
    WHILE           desplazar e ir al estado 22
    OPENINGBRACKET  desplazar e ir al estado 23
    PRINT           desplazar e ir al estado 24
    RETURN          desplazar e ir al estado 25
    BREAK           desplazar e ir al estado 26
    VARIABLE        desplazar e ir al estado 27

    $default  reduce usando la regla 15 (codeSet)

    declaration         ir al estado 28
    codeSet             ir al estado 55
    instruction         ir al estado 30
    assignation         ir al estado 31
    aritmeticOperation  ir al estado 32
    return              ir al estado 33
    print               ir al estado 34
    controlStructure    ir al estado 35
    structuresWord      ir al estado 36


estado 36

   36 controlStructure: structuresWord . OPENINGBRACKET logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    OPENINGBRACKET  desplazar e ir al estado 56


estado 37

    8 params: INT VARIABLE $@3 COMMA params .

    $default  reduce usando la regla 8 (params)


estado 38

    3 declaration: INT VARIABLE . SEMICOLON

    SEMICOLON  desplazar e ir al estado 7


estado 39

   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   23                   | aritmeticOperation . '+' aritmeticOperation
   24                   | aritmeticOperation . '*' aritmeticOperation
   25                   | aritmeticOperation . '/' aritmeticOperation
   26                   | OPENINGBRACKET aritmeticOperation . CLOSINGBRACKET

    CLOSINGBRACKET  desplazar e ir al estado 57
    '-'             desplazar e ir al estado 49
    '+'             desplazar e ir al estado 50
    '*'             desplazar e ir al estado 51
    '/'             desplazar e ir al estado 52


estado 40

   30 print: PRINT OPENINGBRACKET . printableElement CLOSINGBRACKET

    QUOTE     desplazar e ir al estado 58
    VARIABLE  desplazar e ir al estado 59

    printableElement  ir al estado 60


estado 41

   29 return: RETURN NUMBER .

    $default  reduce usando la regla 29 (return)


estado 42

   28 return: RETURN VARIABLE .

    $default  reduce usando la regla 28 (return)


estado 43

   20 instruction: BREAK SEMICOLON .

    $default  reduce usando la regla 20 (instruction)


estado 44

   21 assignation: VARIABLE '=' . NUMBER SEMICOLON

    NUMBER  desplazar e ir al estado 61


estado 45

   10 codeSet: declaration codeSet .

    $default  reduce usando la regla 10 (codeSet)


estado 46

    6 function: INT VARIABLE $@1 OPENINGBRACKET $@2 params CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET .

    $default  reduce usando la regla 6 (function)


estado 47

   11 codeSet: instruction codeSet .

    $default  reduce usando la regla 11 (codeSet)


estado 48

   17 instruction: aritmeticOperation SEMICOLON .

    $default  reduce usando la regla 17 (instruction)


estado 49

   22 aritmeticOperation: aritmeticOperation '-' . aritmeticOperation

    NUMBER          desplazar e ir al estado 18
    OPENINGBRACKET  desplazar e ir al estado 23

    aritmeticOperation  ir al estado 62


estado 50

   23 aritmeticOperation: aritmeticOperation '+' . aritmeticOperation

    NUMBER          desplazar e ir al estado 18
    OPENINGBRACKET  desplazar e ir al estado 23

    aritmeticOperation  ir al estado 63


estado 51

   24 aritmeticOperation: aritmeticOperation '*' . aritmeticOperation

    NUMBER          desplazar e ir al estado 18
    OPENINGBRACKET  desplazar e ir al estado 23

    aritmeticOperation  ir al estado 64


estado 52

   25 aritmeticOperation: aritmeticOperation '/' . aritmeticOperation

    NUMBER          desplazar e ir al estado 18
    OPENINGBRACKET  desplazar e ir al estado 23

    aritmeticOperation  ir al estado 65


estado 53

   18 instruction: return SEMICOLON .

    $default  reduce usando la regla 18 (instruction)


estado 54

   19 instruction: print SEMICOLON .

    $default  reduce usando la regla 19 (instruction)


estado 55

   12 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 12 (codeSet)


estado 56

   36 controlStructure: structuresWord OPENINGBRACKET . logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    NUMBER    desplazar e ir al estado 66
    VARIABLE  desplazar e ir al estado 67

    logicalOperation  ir al estado 68


estado 57

   26 aritmeticOperation: OPENINGBRACKET aritmeticOperation CLOSINGBRACKET .

    $default  reduce usando la regla 26 (aritmeticOperation)


estado 58

   32 printableElement: QUOTE . text QUOTE

    TEXT  desplazar e ir al estado 69
    ' '   desplazar e ir al estado 70

    text  ir al estado 71


estado 59

   31 printableElement: VARIABLE .

    $default  reduce usando la regla 31 (printableElement)


estado 60

   30 print: PRINT OPENINGBRACKET printableElement . CLOSINGBRACKET
   33 printableElement: printableElement . '+' printableElement

    CLOSINGBRACKET  desplazar e ir al estado 72
    '+'             desplazar e ir al estado 73


estado 61

   21 assignation: VARIABLE '=' NUMBER . SEMICOLON

    SEMICOLON  desplazar e ir al estado 74


estado 62

   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   22                   | aritmeticOperation '-' aritmeticOperation .
   23                   | aritmeticOperation . '+' aritmeticOperation
   24                   | aritmeticOperation . '*' aritmeticOperation
   25                   | aritmeticOperation . '/' aritmeticOperation

    '*'  desplazar e ir al estado 51
    '/'  desplazar e ir al estado 52

    $default  reduce usando la regla 22 (aritmeticOperation)


estado 63

   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   23                   | aritmeticOperation . '+' aritmeticOperation
   23                   | aritmeticOperation '+' aritmeticOperation .
   24                   | aritmeticOperation . '*' aritmeticOperation
   25                   | aritmeticOperation . '/' aritmeticOperation

    '*'  desplazar e ir al estado 51
    '/'  desplazar e ir al estado 52

    $default  reduce usando la regla 23 (aritmeticOperation)


estado 64

   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   23                   | aritmeticOperation . '+' aritmeticOperation
   24                   | aritmeticOperation . '*' aritmeticOperation
   24                   | aritmeticOperation '*' aritmeticOperation .
   25                   | aritmeticOperation . '/' aritmeticOperation

    $default  reduce usando la regla 24 (aritmeticOperation)


estado 65

   22 aritmeticOperation: aritmeticOperation . '-' aritmeticOperation
   23                   | aritmeticOperation . '+' aritmeticOperation
   24                   | aritmeticOperation . '*' aritmeticOperation
   25                   | aritmeticOperation . '/' aritmeticOperation
   25                   | aritmeticOperation '/' aritmeticOperation .

    $default  reduce usando la regla 25 (aritmeticOperation)


estado 66

   42 logicalOperation: NUMBER . logicalOperator NUMBER
   43                 | NUMBER . logicalOperator VARIABLE

    EQUAL         desplazar e ir al estado 75
    NOTEQUAL      desplazar e ir al estado 76
    GREATER       desplazar e ir al estado 77
    MINOR         desplazar e ir al estado 78
    GREATEREQUAL  desplazar e ir al estado 79
    MINOREQUAL    desplazar e ir al estado 80

    logicalOperator  ir al estado 81


estado 67

   40 logicalOperation: VARIABLE . logicalOperator VARIABLE
   41                 | VARIABLE . logicalOperator NUMBER

    EQUAL         desplazar e ir al estado 75
    NOTEQUAL      desplazar e ir al estado 76
    GREATER       desplazar e ir al estado 77
    MINOR         desplazar e ir al estado 78
    GREATEREQUAL  desplazar e ir al estado 79
    MINOREQUAL    desplazar e ir al estado 80

    logicalOperator  ir al estado 82


estado 68

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation . CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    CLOSINGBRACKET  desplazar e ir al estado 83


estado 69

   34 text: TEXT .

    $default  reduce usando la regla 34 (text)


estado 70

   35 text: ' ' .

    $default  reduce usando la regla 35 (text)


estado 71

   32 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 84


estado 72

   30 print: PRINT OPENINGBRACKET printableElement CLOSINGBRACKET .

    $default  reduce usando la regla 30 (print)


estado 73

   33 printableElement: printableElement '+' . printableElement

    QUOTE     desplazar e ir al estado 58
    VARIABLE  desplazar e ir al estado 59

    printableElement  ir al estado 85


estado 74

   21 assignation: VARIABLE '=' NUMBER SEMICOLON .

    $default  reduce usando la regla 21 (assignation)


estado 75

   44 logicalOperator: EQUAL .

    $default  reduce usando la regla 44 (logicalOperator)


estado 76

   45 logicalOperator: NOTEQUAL .

    $default  reduce usando la regla 45 (logicalOperator)


estado 77

   46 logicalOperator: GREATER .

    $default  reduce usando la regla 46 (logicalOperator)


estado 78

   47 logicalOperator: MINOR .

    $default  reduce usando la regla 47 (logicalOperator)


estado 79

   48 logicalOperator: GREATEREQUAL .

    $default  reduce usando la regla 48 (logicalOperator)


estado 80

   49 logicalOperator: MINOREQUAL .

    $default  reduce usando la regla 49 (logicalOperator)


estado 81

   42 logicalOperation: NUMBER logicalOperator . NUMBER
   43                 | NUMBER logicalOperator . VARIABLE

    NUMBER    desplazar e ir al estado 86
    VARIABLE  desplazar e ir al estado 87


estado 82

   40 logicalOperation: VARIABLE logicalOperator . VARIABLE
   41                 | VARIABLE logicalOperator . NUMBER

    NUMBER    desplazar e ir al estado 88
    VARIABLE  desplazar e ir al estado 89


estado 83

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation CLOSINGBRACKET . OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET

    OPENINGCURLYBRACKET  desplazar e ir al estado 90


estado 84

   32 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 32 (printableElement)


estado 85

   33 printableElement: printableElement . '+' printableElement
   33                 | printableElement '+' printableElement .

    $default  reduce usando la regla 33 (printableElement)


estado 86

   42 logicalOperation: NUMBER logicalOperator NUMBER .

    $default  reduce usando la regla 42 (logicalOperation)


estado 87

   43 logicalOperation: NUMBER logicalOperator VARIABLE .

    $default  reduce usando la regla 43 (logicalOperation)


estado 88

   41 logicalOperation: VARIABLE logicalOperator NUMBER .

    $default  reduce usando la regla 41 (logicalOperation)


estado 89

   40 logicalOperation: VARIABLE logicalOperator VARIABLE .

    $default  reduce usando la regla 40 (logicalOperation)


estado 90

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET . codeSet CLOSINGCURLYBRACKET

    NUMBER          desplazar e ir al estado 18
    INT             desplazar e ir al estado 19
    IF              desplazar e ir al estado 20
    ELSE            desplazar e ir al estado 21
    WHILE           desplazar e ir al estado 22
    OPENINGBRACKET  desplazar e ir al estado 23
    PRINT           desplazar e ir al estado 24
    RETURN          desplazar e ir al estado 25
    BREAK           desplazar e ir al estado 26
    VARIABLE        desplazar e ir al estado 27

    declaration         ir al estado 28
    codeSet             ir al estado 91
    instruction         ir al estado 30
    assignation         ir al estado 31
    aritmeticOperation  ir al estado 32
    return              ir al estado 33
    print               ir al estado 34
    controlStructure    ir al estado 35
    structuresWord      ir al estado 36


estado 91

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET codeSet . CLOSINGCURLYBRACKET

    CLOSINGCURLYBRACKET  desplazar e ir al estado 92


estado 92

   36 controlStructure: structuresWord OPENINGBRACKET logicalOperation CLOSINGBRACKET OPENINGCURLYBRACKET codeSet CLOSINGCURLYBRACKET .

    $default  reduce usando la regla 36 (controlStructure)
